logging.config = logging-config:classpath:log4j.properties
logging.file-web=app.log
logging.file-core=core.log

spring.aop.proxy-target-class = aop-proxy-target: false
spring.aop.auto = aop-auto:false

#-- 应用服务器配置
#-- 内嵌的WEB应用服务器监听端口
server.port=port:18080
#-- 内嵌的WEB应用服务器监听地址
server.address=address:127.0.0.1
#-- 应用上下文路径
server.context-path=context-path:/edccommon
#-- 接收新连接的队列大小最大值
server.tomcat.accept-count=accept-count:10
#-- 并发处理的最大线程数
server.tomcat.max-threads=max-threads:100
#-- 同时并发处理的最大连接数
server.tomcat.max-connections=max-conns:100

#-- Dubbo相关配置
#-- Dubbo服务端监听端口
dubbo.provider.port=dubbo-port:20880
#-- dubbo生产者的应用标识
dubbo.provider.application-name=dubbo-appname:edccommon-provider
#-- dubbo生产者：默认的服务超时时间，单位：毫秒
dubbo.provider.timeout=dubbo-timeout:10000
dubbo.provider.registry-address=dubbo-zk:N/A
dubbo.provider.annotation-package = dubbo-pkg:com.cmos.edccommon.service

#-- Dubbo服务注册与发现的zookeeper集群地址
dubbo.consumer.registry-address=dubbo-zk:N/A
#-- dubbo消费者的应用标识
dubbo.consumer.application-name=dubbo-appname:edccommon-consumer
#-- dubbo消费者：对应的dubbo生产者服务地址
dubbo.consumer.reference-url=dubbo-ref:dubbo://localhost:20880
#-- dubbo消息者：默认的服务访问超时时间，单位：毫秒
dubbo.consumer.timeout=dubbo-timeout:10000
dubbo.consumer.annotation-package = dubbo-pkg:com.cmos.edccommon.web

#-- 配置中心zookeeper server
#-- 是否启用配置中心
cfg.enabled=cfg-enabled:false
#-- CORE层应用实例编码
cfg.instance.code-core=instanceid:Core01
#-- WEB层应用实例编码
cfg.instance.code-web=instanceid:App01
#-- 配置中心分配置系统标识
cfg.sysname=sysid:sys1
#-- 配置中心分配的应用标识
cfg.appname=appid:app1
#-- 配置中心zookeeper集群服务地址
cfg.zk.servers=zk-servers:192.168.100.144:2181

#-- 消息中心配置
#-- 是否启用消息中心
msg.enabled=msg-enabeld:true
#-- 消息中心broker集群
msg.brokers=brokers:192.168.100.145:9876;192.168.100.146:9876
#-- 消息中心类型： rocketmq，支持：activemq, rocketmq, mqtt
msg.client-type=client-type:rocketmq

#-- 日志中心配置
#-- 日志中心开关
logger.switch.enable-control=true
logger.switch.enable-core=true
#-- 日志调试开关
logger.debug.enable-control=false
logger.debug.enable-core=false
#-- 日志级别
logger.log.level-control=info
logger.log.level-core=info
#-- 日志发送方式，部署在核心域和接口域使用kafka方式，互联网域使用file方式。
logger.msg.sender-control=kafka
logger.msg.sender-core=kafka
#-- kafka地址，根据部署环境进行选择配置
#-- 西区测试kafka集群
logger.kafka.brokerlist=192.168.100.105:9092,192.168.100.106:9092,192.168.100.107:9092

#-- ONEST配置
ONEST.ENDPOINT=http://192.168.100.134
ONEST.UID=edc
ONEST.DISPLAY-NAME=edctest
ONEST.ACCESS-KEY=3WKD5JFCBFE8KB14T12F
ONEST.SECRET-KEY=BHFyFkwlb3GbZdzGdTbBcB59YHO8rlAi5wN1SXU4
ONEST.gztFile.bucketName=test-edc
onest.busifile.bucketname.P=test-edc
onest.busifile.bucketname.W=test-edc
onest.busifile.bucketname.V=test-edc
#-- csf配置
#-- 本系统（服务调用方）在csf web平台中配置的系统编码
csf.centers.code=edccommon
#-- csf服务zookeeper地址，多个地址用逗号(,)隔开
csf.zkServer.list=192.168.100.144:2181
#-- 缓存中心配置
#-- redis地址
cache.redisAddress=192.168.100.105:7000,192.168.100.105:7001

#-- 人像照片质检服务配置
cfg.picCheck.url=http://192.168.100.139:30503/verify





# 默认数据源
db.default = base

#base.driverClassName=com.mysql.jdbc.Driver
#base.url=jdbc:mysql://192.168.100.126:40000/epaper?useUnicode=true&characterEncoding=utf8
#base.username=epaper_dev
#base.password=rO0ABXciABDEesR/iqw2VIiT69DRX+2CJPAD5A9Oyf/5oEp7r+v4zw==
#base.initialSize=2

base.driverClassName=com.mysql.jdbc.Driver
base.url=jdbc:mysql://192.168.100.225:8066/dev_edccommon?useUnicode=true&characterEncoding=utf8
base.username=dev_edccommon
base.password=rO0ABXcyACBWs+X4ODw8ULGi4jQJAUY/Rkk/DiZDsGRzmB/YmDkxHGTRla2RFWynYMQFizGDdbM=
base.initialSize=2

#-- 数据源配置
# 数据源1
#base.driverClassName=com.mysql.jdbc.Driver
#base.url=jdbc:mysql://192.168.100.5:23000/itframe_test?useUnicode=true&characterEncoding=utf8
#base.username=itframe
#base.password=rO0ABXciABBrcR6N1fan4bdlpaj3PkQ1QdmUSxCHWOlLqtl3/hb8jQ==
#base.initialSize=2
# 数据源2
#local.driverClassName=com.mysql.jdbc.Driver
#local.url=jdbc:mysql://localhost:3306/edc_cm?useUnicode=true&characterEncoding=utf8
#local.username=root
#local.password=rO0ABXciABDk+zMttGdcxIxF9prdK6S18y9RnYwRoPcPg3snhbxdlw==

# 数据源3
#tenant2.driverClassName=com.mysql.jdbc.Driver
#tenant2.url=jdbc:mysql://192.168.100.126:40000/itframe_dev?useUnicode=true&characterEncoding=utf8
#tenant2.username=itframe
#tenant2.password=0%NrXJzJ

# 自定义初始化
spring.app.initializers = inits: