package com.cmos.edccommon.service.impl.emp;

import com.alibaba.dubbo.config.annotation.Service;
import com.cmos.edccommon.beans.emp.Emp;
import com.cmos.edccommon.beans.emp.EmpExample;
import com.cmos.edccommon.dao.emp.EmpDAO;
import com.cmos.edccommon.iservice.emp.IEmpSV;
import com.github.pagehelper.PageHelper;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.List;

/**
 * Demo示例,员工信息服务实现类
 * <p>使用了Dubbo服务注解,自动注册为Dubbo服务
 *
 * @author zhuanghd
 * @since 1.0
 */
@Service(group = "edccommon")
public class EmpSVImpl implements IEmpSV {
    
    @Autowired
    private EmpDAO dao;

    @Override
    public List<Emp> getByPage(Integer pageNum, Integer pageSize) {
        PageHelper.startPage(pageNum, pageSize);
        EmpExample example = new EmpExample();
        EmpExample.Criteria criteria = example.createCriteria();
        criteria.andEmpnoIsNotNull();
        return dao.getByExample(example);
    }

    @Override
    public List<Emp> getByBasicInfo(String ename, String job, Long mgr) {
        EmpExample example = new EmpExample();
        EmpExample.Criteria criteria = example.createCriteria();
        criteria.andEnameEqualTo(ename);
        criteria.andJobEqualTo(job);
        criteria.andMgrEqualTo(mgr);

        // ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 动态数据源设置示例 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
        // 示例1: 直接设置数据中心,连接到数据源tenant1
//        CenterFactory.setCenter("tenant1");

        // 示例2: 根据数据中心路由实现类中的路由规则动态设置数据源
//        try {
//            Emp emp = new Emp();
//            emp.setEname(ename);
//            CenterFactory.setCenterByValue(emp);
//        } catch (Exception e) {
//            // 设置中心失败,处理异常
//        }
        // ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ 动态数据源设置示例 ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
        List<Emp> empList = dao.getByExample(example);
        return empList;
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int countByExample(EmpExample example) {
        return dao.countByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int deleteByExample(EmpExample example) {
    		return dao.deleteByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int deleteByPrimaryKey(Long parameterId) {
    		return dao.deleteByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int save(Emp record) {
        Emp e = new Emp();
        BeanUtils.copyProperties(record, e);
        e.setEmpno(record.getEmpno() + 1);
        dao.save(e);
        if(System.currentTimeMillis() > 0) {
            throw new RuntimeException("...");
        }
        return dao.save(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int saveSelective(Emp record) {
    		return dao.saveSelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public List<Emp> getByExample(EmpExample example) {
    		return dao.getByExample(example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public Emp getByPrimaryKey(Long parameterId) {
    		return dao.getByPrimaryKey(parameterId);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int updateByExampleSelective(Emp record, EmpExample example) {
    		return dao.updateByExampleSelective(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int updateByExample(Emp record, EmpExample example) {
    		return dao.updateByExample(record, example);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public int updateByPrimaryKeySelective(Emp record) {
        return dao.updateByPrimaryKeySelective(record);
    }

    /**
     * This method was generated by IDE Plugin.
     * This method corresponds to the database table EMP
     *
     * @date 2016-11-16 16:13:30
     */
    public Emp updateByPrimaryKey(Emp record) {
        int count = dao.updateByPrimaryKey(record);
        if(count == 1) {
            return record;
        } else {
            return null;
        }
    }
}
